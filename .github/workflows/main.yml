name: Release Creation

on: 
  release:
    types: [published]
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18
    
    - name: Install npm ci
      run: npm ci
      
    - name: Install gulp
      run: npm install gulp
      
    - name: Run gulp build scss files
      run: gulp build

    # get part of the tag after the `v`
    - name: Extract tag version number
      id: get_version
      uses: battila7/get-version-action@dependabot/npm_and_yarn/minimatch-3.1.2

    # Substitute the Manifest and Download URLs in the world.json
    - name: Substitute Manifest and Download Links For Versioned Ones
      id: sub_manifest_link_version
      uses: microsoft/variable-substitution@v1
      with:
        files: 'world.json'
      env:
        version: ${{steps.get_version.outputs.version-without-v}}
        url: https://github.com/${{github.repository}}
        manifest: https://github.com/${{github.repository}}/releases/latest/download/world.json
        download: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/world.zip
    
    # Create a zip file with all files required by the world to add to the release
    - run: zip -r world.zip ./ -x "*node_modules/*" "*.git*" "*.nyc_output*" "*.vscode*" "*coverage*" "*Dev Assets*" "*scss*" "*test*" ".eslintrc.json" ".gitignore" ".hintrc" ".npmignore" "dev-notes.txt" "gulpfile.js" "reclaim.code-workspace"

    # Create a release for this specific version
    - name: Update Release with Files
      id: create_version_release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true # Set this to false if you want to prevent updating existing releases
        name: ${{ github.event.release.name }}
        draft: ${{ github.event.release.unpublished }}
        prerelease: ${{ github.event.release.prerelease }}
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './world.json, ./world.zip'
        tag: ${{ github.event.release.tag_name }}
        body: ${{ github.event.release.body }}
